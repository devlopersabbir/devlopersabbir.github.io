---
// import { isInputError } from "astro:actions";
// import { actions } from "astro:actions";

// const result = Astro.getActionResult(actions.sendMail);

// const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<div
  class="flex-1 bg-zinc-900 p-8 rounded-lg shadow-xl max-h-[700px] overflow-y-auto"
>
  <h1 class="text-3xl font-bold mb-4 text-center text-blue-400">
    Let's Work Together
  </h1>
  <p class="text-zinc-300 mb-6 text-center text-sm">
    I'm currently available for freelance or full-time remote work. Fill out the
    form and I'll get back to you shortly.
  </p>

  <!-- <form class="space-y-6" action={actions.sendMail} method="POST"> -->
  <form class="space-y-6">
    <div>
      <label for="name" class="block text-sm mb-1">Name</label>
      <input
        type="text"
        id="name"
        name="name"
        required
        class="w-full px-4 py-2 rounded bg-zinc-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-400"
        placeholder="Your full name"
      />
      <!-- {inputErrors.name && <p class="text-red-600">{inputErrors.name[0]}</p>} -->
    </div>

    <div>
      <label for="email" class="block text-sm mb-1">Email</label>
      <input
        type="email"
        id="email"
        name="email"
        required
        class="w-full px-4 py-2 rounded bg-zinc-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-400"
        placeholder="you@example.com"
      />
      <!-- {inputErrors.email && <p class="text-red-600">{inputErrors.email[0]}</p>} -->
    </div>

    <div>
      <label for="message" class="block text-sm mb-1">Message</label>
      <textarea
        id="message"
        name="message"
        rows="5"
        required
        class="w-full px-4 py-2 rounded bg-zinc-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-400"
        placeholder="Tell me about your project..."></textarea>
      <!-- {
        inputErrors.message && (
          <p class="text-red-600">{inputErrors.message[0]}</p>
        )
      } -->
    </div>

    <!-- {
      result?.data && (
        <p class="text-blue-600 transition-all ease-in-out py-0">
          {result?.data.message}
        </p>
      )
    } -->
    <button
      onclick="alert('this features is not avaiable.')"
      type="submit"
      class="w-full py-3 rounded bg-blue-500 hover:bg-blue-400 transition-colors text-white font-semibold cursor-pointer"
    >
      Send Message
    </button>
  </form>
</div>
