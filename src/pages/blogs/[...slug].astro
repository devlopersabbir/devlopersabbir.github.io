---
export const prerender = true;
import moment from "moment";
import { getCollection } from "astro:content";
import BlogLayout from "../../layouts/blog-layout.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blogs");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BlogLayout pageTitle={entry.data.title}>
  <section class="container mx-auto px-4 py-10 max-w-4xl">
    <div
      class="rounded-lg overflow-hidden shadow-md transition-all duration-300"
    >
      <img
        src={entry.data.image}
        alt={entry.data.title}
        class="w-full h-72 object-cover"
      />

      <div class="p-6">
        <h1 class="text-4xl font-extrabold mb-4 text-gray-900 dark:text-white">
          {entry.data.title}
        </h1>

        <p class="text-gray-500 dark:text-gray-400 text-sm mb-6">
          By <span class="font-semibold">{entry.data.author}</span> on{" "}
          {moment(entry.data.pubDate).format("LL")}
        </p>

        <article class="markdown-body !bg-transparent">
          <Content />
        </article>

        {
          entry.data.tags && (
            <div class="mt-10">
              <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-3">
                Tags:
              </h3>
              <div class="flex flex-wrap gap-2">
                {entry.data.tags.map((tag) => (
                  <span class="bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full shadow-sm dark:bg-blue-900 dark:text-blue-200">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          )
        }
      </div>
    </div>
  </section>
</BlogLayout>

<!-- Optional Script for Click-to-Copy -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll("pre").forEach((block) => {
      if (!block) return;
      const button = document.createElement("button");
      button.innerText = "ðŸ“‹ Copy";
      button.className =
        "absolute top-2 right-2 bg-gray-800 text-white text-xs px-2 py-1 rounded opacity-75 hover:opacity-100 transition cursor-pointer";
      button.onclick = () => {
        navigator.clipboard.writeText(block.innerText.trim());
        button.innerText = "âœ… Copied!";
        setTimeout(() => (button.innerText = "ðŸ“‹ Copy"), 1500);
      };
      const wrapper = document.createElement("div");
      wrapper.className = "relative";
      block.parentNode && block.parentNode.insertBefore(wrapper, block);
      wrapper.appendChild(block);
      wrapper.appendChild(button);
    });
  });
</script>
